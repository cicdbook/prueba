name: dockercompose7596797843205477886
services:
  api.auditory:
    build:
      context: C:\DEV\Book\Prueba\Solucion.Prueba
      dockerfile: API.Auditory/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
    container_name: api.auditory
    depends_on:
      ms.rabbitmq.bus:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Release
      ASPNETCORE_HTTP_PORTS: "8080"
    image: apiauditory
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "6080"
        protocol: tcp
  api.worktimerecord:
    build:
      context: C:\DEV\Book\Prueba\Solucion.Prueba
      dockerfile: API.WorkTimeRecord/Dockerfile
    container_name: api.worktimerecord
    depends_on:
      ms.rabbitmq.bus:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: apiworktimerecord
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5080"
        protocol: tcp
  ms.mongo.auditory.db:
    build:
      context: C:\DEV\Book\Prueba\Solucion.Prueba
      dockerfile: ms.mongo.auditory.db/Dockerfile
    container_name: ms.mongo.auditory.db
    environment:
      MONGO_INITDB_DATABASE: auditory_db
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "60017"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\DEV\Book\Prueba\Solucion.Prueba\ms.mongo.auditory.db\init.js
        target: /docker-entrypoint-initdb.d/init.js
        bind:
          create_host_path: true
  ms.mongo.worktimerecord.db:
    build:
      context: C:\DEV\Book\Prueba\Solucion.Prueba
      dockerfile: ms.mongo.worktimerecord.db/Dockerfile
    container_name: ms.mongo.worktimerecord.db
    environment:
      MONGO_INITDB_DATABASE: work_time_db
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "50017"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\DEV\Book\Prueba\Solucion.Prueba\ms.mongo.worktimerecord.db\init.js
        target: /docker-entrypoint-initdb.d/init.js
        bind:
          create_host_path: true
  ms.rabbitmq.bus:
    container_name: ms.rabbitmq.bus
    environment:
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_USER: admin
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose7596797843205477886_default